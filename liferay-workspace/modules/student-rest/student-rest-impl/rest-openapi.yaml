info:
    description: "StudentRest REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "StudentRest"
    version: v1.0
openapi: 3.0.1
paths:
  "/get-students":
    get:
      summary: Get all students
      operationId: getAllStudents
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
      tags: ["Student"]
  "/create-student":
    post:
      summary: Create a new student
      operationId: createStudent
      requestBody:
        description: Student object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid input
      tags: ["Student"]
  "/get-student":
    get:
      summary: Get student by ID
      operationId: getStudentById
      parameters:
        - name: studentId 
          in: query
          description: ID of the student to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
      tags: ["Student"]
  "/delete-student":
    delete:
      summary: Delete student by ID
      operationId: deleteStudentById
      parameters:
        - name: studentId 
          in: query
          description: ID of the student to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Student deleted successfully
        '404':
          description: Student not found
      tags: ["Student"]
components:
  schemas:
    Student:
      description: Student
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        gender:
          type: string
        mobilenumber:
          type: string